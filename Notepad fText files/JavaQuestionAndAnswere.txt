Java Question and Answere

Q1. What is the difference between comparator & comparable?
Ans =
Comparable :- provides a single sorting sequence. 
In other words, we can sort the collection on the basis of a single element such as id, name, and price. 

Comparator :- provides multiple sorting sequences.
In other words, we can sort the collection on the basis of multiple elements such as id, name, and price etc.

================================================================================================================

Q. What is the difference between collection and collections?
Ans:- Collection is used to represent a single unit with a group of individual objects .
      whereas collections is used to operate on collection with several utility methods .

================================================================================================================

Q2. What is oops concepts and types?
Ans =
Object-Oriented Programming :- is a paradigm that provides many concepts, such as inheritance, data binding, polymorphism, etc.

The main aim of object-oriented programming is to implement real-world entities, for example, object, classes, abstraction, inheritance, polymorphism, etc.

Object :- Object means a real-world entity such as a pen, chair, table etc.
          Object can be defined as an instance of a class.
          example :- A dog is an object because it has states like color, name, breed, etc.

Class :- Collection of objects is called class.
         A class can also be defined as a blueprint from which you can create an individual object.

Inheritance :- When one object acquires all the properties and behaviors of a parent object, it is known as inheritance. 
               It provides code reusability. 
               It is used to achieve runtime polymorphism.

Polymorphism :- If one task is performed in different ways, it is known as polymorphism.
                In Java, we use method overloading and method overriding to achieve polymorphism.

Abstraction :- Hiding internal details and showing functionality is known as abstraction. 
               In Java, we use abstract class and interface to achieve abstraction.
               example :-phone call, we don't know the internal processing.

Encapsulation :- Binding (or wrapping) code and data together into a single unit are known as encapsulation.
                 real world example, a capsule, it is wrapped with different medicines.
                 java example , A java class is the example of encapsulation bcz all data members are private.

Coupling :- Coupling refers to the knowledge or information or dependency of another class. 
            It arises when classes are aware of each other. If a class has the details information of another class, there is strong coupling. 
            In Java, we use private, protected, and public modifiers to display the visibility level of a class, method, and field. 
            You can use interfaces for the weaker coupling because there is no concrete implementation.

Association :- Association represents the relationship between the objects. 
               Here, one object can be associated with one object or many objects. 
              There can be four types of association between the objects:

              1.One to One
              2.One to Many
              3.Many to One
              4.Many to Many

Aggregation :- Aggregation is a way to achieve Association. 
               Aggregation represents the relationship where one object contains other objects as a part of its state.
               It represents the weak relationship between objects. 
               It is also termed as a has-a relationship in Java. Like, inheritance represents the is-a relationship.
               It is another way to reuse objects.

Composition :- The composition is also a way to achieve Association. 
               The composition represents the relationship where one object contains other objects as a part of its state. 
               There is a strong relationship between the containing object and the dependent object.
               all the child objects will be deleted automatically. 


================================================================================================================================

Q3. What is static keyword in java?
Ans = The static keyword in Java is used for memory management.
      We can apply static keyword with :-
     
      1.Variable (also known as a class variable)
      2.Method (also known as a class method)
      3.Block
      4.Nested class

Advantages of static variable :-
1. It makes your program memory efficient (i.e., it saves memory).
================================================================================================================================

Q4. Garbage Collection in java?
Ans = Garbage Collection is process of reclaiming the runtime unused memory automatically.
      In other words, it is a way to destroy the unused objects.

      Advantage of Garbage Collection :-
       1. It makes java memory efficient because garbage collector removes the unreferenced objects from heap memory.
       2. It is automatically done by the garbage collector(a part of JVM) so we don't need to make extra efforts.

================================================================================================================================

Q5. What is Constructor?
Ans:- Contructor is a block of code which is similar to the method , constructor will call when the class object is created.

      Rules for creating Java constructor:-

      1.Constructor name must be the same as its class name
      2.A Constructor must have no explicit return type

      There are two types of constructor:-
      1. Defualt Constructor :- A constructor is called "Default Constructor" when it doesn't have any parameter.
      2. Parameterized Constructor :- A constructor which has a specific number of parameters is called a parameterized constructor.

================================================================================================================================

Q6. What is final keyword?
Ans :- The final keyword in java is used to restrict the user. 

       the final Keyword can be :-

       1. Class :- If you make any class as final, you cannot extend it.
       2. Variables :- If you make any variable as final, you cannot change the value of final variable.
       3. Methods :- If you make any method as final, you cannot override it.

================================================================================================================================

Q7. What is Abstration in java?
Ans:- Abstration is a mehcanism to Hiding the implementaion Details and showing the set of services or functionality.

      There are two ways to achieve abstraction in java:

      1.Abstract class (0 to 100%)
      2.Interface (100%)


      What is Abstract Class?
      Ans:- A Class Which have Abstract Keyword that class is knows as Abstract Class.
            it can have abstract and non abstract methods.
   
      Rules of Abstract Class:
      1. An abstract class must be declared with an abstract keyword.
      2. It can have abstract and non-abstract methods.
      3. It cannot be instantiated.
      4. It can have constructors and static methods also.
      5. It can have final methods.

      What is Abstract Method?
      Ans:- A Method Which is declared as abstract and does not have any implementation. is knows as Abstract Method.
   
================================================================================================================================

Q8. What is Interface?
Ans:- An interface in Java is a blueprint of a class.
      It has static constants and abstract methods.
      It is used to achieve abstraction and multiple inheritance in Java.
      There can be only abstract methods in the Java interface, not method body.

     Why use Java interface?
     Ans:- There are mainly three reasons to use interface.
     1. It is used to achieve abstraction.
     2. By interface, we can support the functionality of multiple inheritance.
     3. It can be used to achieve loose coupling.

================================================================================================================================

Q9. Difference Between Abstract Class and Interface?
Ans:- 1) Abstract class can have abstract and non-abstract methods.
      1) Interface can have only abstract methods.

      2) Abstract class doesn't support multiple inheritance.
      2) Interface supports multiple inheritance.

      3) Abstract class can have final, non-final, static and non-static variables.
      3) Interface has only static and final variables.

      4) Abstract class can provide the implementation of interface.
      4) Interface can't provide the implementation of abstract class.

      5) The abstract keyword is used to declare abstract class.
      5) The interface keyword is used to declare interface.

      6) An abstract class can extend another Java class and implement multiple Java interfaces.
      6) An interface can extend another Java interface only.
         
      7) abstract class achieves partial abstraction.
      7) interface achieves fully abstraction (100%).

================================================================================================================================

Q10. What is Wrapper Class ?
Ans:- The wrapper class in Java provides the mechanism to convert primitive into object and object into primitive.

================================================================================================================================
      
Q11. What is Exception Handling in java?

Ans:-  Exception is an abnormal condition.
       The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors ,
       so that the normal flow of the application can be maintained.

       Example :-  ClassNotFoundException, IOException, SQLException, RemoteException, etc.

       Advantage of Exception Handling:
       1. The core advantage of exception handling is to maintain the normal flow of the application.

       Types of Java Exceptions:-
       1. Checked Exception :- The classes that directly inherit the Throwable class. Ex:- IOException, SQLException, etc
       2. Unchecked Exception :- The classes that inherit the RuntimeException are known as unchecked exceptions. Ex:- ArithmeticException, NullPointerException
       3. Error :- Error is irrecoverable. Ex:- OutOfMemoryError etc.

 Java provides five keywords that are used to handle the exception:-
 1. try :- The try statement allows you to define a block of code to be tested for errors while it is being executed.
 2. catch :- The "catch" block is used to handle the exception.
 3. finally :- The "finally" block is always excecute it does not depend on try catch block , also used to close the conection.
 4. throw :- The "throw" keyword is used to throw an exception.
 5. throws :- The "throws" keyword is used to declare exceptions.

================================================================================================================================

Q12. What is Collection and Types of collection?
Ans:- The Collection in Java is a framework that provides an architecture to store and manipulate the group of objects.
      Java Collections can achieve all the operations that you perform on a data such as searching, sorting, insertion, manipulation, and deletion.
      Java Collection means a single unit of objects.
      Java Collection framework provides many interfaces (Set, List, Queue, Deque) and
      classes (ArrayList, Vector, LinkedList, PriorityQueue, HashSet, LinkedHashSet, TreeSet).		

================================================================================================================================

Q13. What is a framework in Java ?
Ans:- It provides readymade architecture. 
      It represents a set of classes and interfaces.
      It is optional.

================================================================================================================================
Q14. What is Collection framework?
Ans:- The Collection framework represents a unified architecture for storing and manipulating a group of objects.
================================================================================================================================

Q15. What is the difference between ArrayList and LinkedList?
Ans:- 1. ArrayList internally uses a dynamic array to store the elements.
      1. LinkedList internally uses a doubly linked list to store the elements.

      2. Manipulation with ArrayList is slow because it internally uses an array.
      2. Manipulation with LinkedList is faster than ArrayList because it uses a doubly linked list
 
      3. An ArrayList class can act as a list only because it implements List only.
      3. LinkedList class can act as a list and queue both because it implements List and Deque interfaces.

      4. ArrayList is better for storing and accessing data.
      4. LinkedList is better for manipulating data.
      
      5. The memory location for the elements of an ArrayList is contiguous.
      5. The location for the elements of a linked list is not contagious.





                                         Technical Questions:-
                                        =======================
Q1 Can we overload the main method?
Ans =  Yes, we can overload the main() method in Java.
       but JVM seeks is orignal method that is PSVM(String args[]){}

================================================================================================================================

Q2. A Java Constructor returns a value but, what?
Ans = No, constructor does not return any value.

================================================================================================================================

Q3. Can we create a program without main method?
Ans = Yes, you can compile and execute without main method by using a static block.

================================================================================================================================

Q4. Why is multiple inheritance not supported in Java?
Ans = Java doesn't support multiple inheritances in classes because it can lead to diamond problem.

================================================================================================================================

Q5. Can we override the static method in Java?
Ans = We can declare static methods with the same signature in the subclass,
      but it is not considered overriding as there won't be any run-time polymorphism. 
      Hence the answer is 'No'.
     or
     we can overload static method but we can't override static method.

================================================================================================================================

Q6. What is the use of instance initializer block in Java?
Ans = Instance Initialization Blocks or IIBs are used to initialize instance variables. 

================================================================================================================================

Q7. What is the usage of a blank final variable?
Ans = Blank final variables are used to create immutable objects.

================================================================================================================================



Q8. What is the difference between static and dynamic binding?
Ans = Static binding :- uses Type information for binding (obj is know as compiple time)
      while,
      Dynamic binding :- uses Objects to resolve to bind. (obj is know as run time)

================================================================================================================================

Q9. What is the purpose of a private constructor?
Ans = A private constructor in Java is used in restricting object creation.
      or,
     If a constructor is declared as private, then its objects are only accessible from within the declared class. 
     You cannot access its objects from outside the constructor class.

================================================================================================================================

Q10. What is object cloning in Java?
Ans = Object cloning refers to the creation of an exact copy of an object. 
      It creates a new instance of the class of the current object 
      and initializes all its fields with exactly the contents of the corresponding fields of this object.
      Using Assignment Operator to create a copy of the reference variable.
================================================================================================================================

Q11. Internal Working of HashMap in Java?
Ans =    Sub modules things:- 

    1. What is Hashing
    Ans - It is the process of converting an object into an integer value. The integer value helps in indexing and faster searches.

    2. What is HashMap
    Ans - HashMap is a part of the Java collection framework. 
          It uses a technique called Hashing.
          It implements the map interface. 
          It stores the data in the pair of Key and Value. 
          HashMap contains an array of the nodes, and the node is represented as a class.
          It uses an array and LinkedList data structure internally for storing Key and Value.

          Before HashMap , You must be aware of hashCode() and equals() method:-
          
          equals():- It checks the equality of two objects. It compares the Key.
          hashCode():- This is the method of the object class. It returns the memory reference of the object in integer form.  
          Buckets:- Array of the node is called buckets.    
          
================================================================================================================================

Q12. How can an object be unreferenced?
Ans = There are many ways:

      1.By nulling the reference
      2.By assigning a reference to another
      3.By anonymous object etc.

      gc() method :-
      The gc() method is used to invoke the garbage collector to perform cleanup processing. The gc() is found in System and Runtime classes.

================================================================================================================================